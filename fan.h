//**************************************************
// 
// Hackathon ( fan.h )
// Author  : Yuda Kaito
// 
//**************************************************
#ifndef _FAN_H_	//このマクロ定義がされてなかったら
#define _FAN_H_	//２重インクルード防止のマクロ定義

//==================================================
// インクルード
//==================================================
#include "main.h"
#include "texture.h"

//==================================================
// プロトタイプ宣言
//==================================================
//--------------------------------------------------
// 初期化
//--------------------------------------------------
void InitFan(void);

//--------------------------------------------------
// 終了
//--------------------------------------------------
void UninitFan(void);

//--------------------------------------------------
// 描画
//--------------------------------------------------
void DrawFan(void);

//--------------------------------------------------
// 設定
// 引数  : TEXTURE texture / 列挙型 種類
//--------------------------------------------------
int SetFan(TEXTURE texture);

//--------------------------------------------------
// 設定 [ テクスチャあり ]
// 引数  : LPDIRECT3DTEXTURE9 pTexture / テクスチャ
//--------------------------------------------------
int SetFanWithTex(LPDIRECT3DTEXTURE9 pTexture);

//--------------------------------------------------
// 使うのを止める
// 引数  : int nIdx / インデックス
//--------------------------------------------------
void StopUseFan(int nIdx);

//--------------------------------------------------
// 位置の設定
// 引数1  : int nIdx / インデックス
// 引数2  : D3DXVECTOR3 &pos / 中心の位置
// 引数3  : D3DXVECTOR3 &size / サイズ
//--------------------------------------------------
void SetPosFan(int nIdx, const D3DXVECTOR3 &pos, const float &fLength, bool bSide);

//--------------------------------------------------
// 回転する位置の設定
// 引数1  : int nIdx / インデックス
// 引数2  : D3DXVECTOR3 &pos / 中心の位置
// 引数3  : float fRot / 向き
// 引数4  : float fLength / 長さ
//--------------------------------------------------
void SetRotationPosFan(int nIdx, const D3DXVECTOR3 &pos, float fRot, float fLength, bool bSide);

//--------------------------------------------------
// 色の設定
// 引数1  : int nIdx / インデックス
// 引数2  : D3DXCOLOR &color / 色
//--------------------------------------------------
void SetColorFan(int nIdx, const D3DXCOLOR &color);

//--------------------------------------------------
// 中心色の設定
// 引数1  : int nIdx / インデックス
// 引数2  : D3DXCOLOR &color / 色
//--------------------------------------------------
void SetColorCenterFan(int nIdx, const D3DXCOLOR &color);

//--------------------------------------------------
// テクスチャ座標の設定
// 引数  : int nIdx / インデックス
//--------------------------------------------------
void SetTexFan(int nIdx);

//--------------------------------------------------
// 描画するかどうか
// 引数1  : int nIdx / インデックス
// 引数2  : bool bDraw / 描画するかどうか
//--------------------------------------------------
void SetDrawFan(int nIdx, bool bDraw);

//--------------------------------------------------
// 加算合成するかどうか
// 引数1  : int nIdx / インデックス
// 引数2  : bool bDraw / 加算合成するかどうか
//--------------------------------------------------
void SetAddFan(int nIdx, bool bAdd);

//--------------------------------------------------
// テクスチャの変更
// 引数1  : int nIdx / インデックス
// 引数2  : TEXTURE texture / 列挙型 種類
//--------------------------------------------------
void ChangeTextureRectangle(int nIdx, TEXTURE texture);

//--------------------------------------------------
// テクスチャの変更 [ テクスチャあり ]
// 引数1  : int nIdx / インデックス
// 引数2  : TEXTURE texture / 列挙型 種類
//--------------------------------------------------
void ChangeTextureFanWithTex(int nIdx, LPDIRECT3DTEXTURE9 pTexture);

//--------------------------------------------------
// 頂点バッファの取得
// 引数  : int nIdx / インデックス
// 返値  : LPDIRECT3DVERTEXBUFFER9 / 頂点バッファ
//--------------------------------------------------
LPDIRECT3DVERTEXBUFFER9 GetVtxBuffFan(int nIdx);

//--------------------------------------------------
// 描画する円の量を加算
// 引数1  : int nIdx / インデックス
// 引数2  : int nVolume / 増加量
//--------------------------------------------------
void AddDrawFan(int nIdx, int nVolume);

//--------------------------------------------------
// 描画する円の量をリセット
// 引数  : int nIdx / インデックス
//--------------------------------------------------
void ResetDrawFan(int nIdx);

#endif // !_FAN_H_
